input {
  file {
    path => ["/data/suricata/log/eve.json"]
    codec => json
    type => "Suricata"
  }
  file {
    path => ["/data/suricata/log/p0f.json"]
    codec => json
    type => "P0f"
  }
  file {
    path => ["/data/conpot/log/conpot.log"]
    type => "ConPot"
  }
  file {
    path => ["/data/cowrie/log/cowrie.json"]
    codec => json
    type => "Cowrie"
  }
  file {
    path => ["/data/ews/dionaea/ews.json"]
    codec => json
    type => "Dionaea"
  }
  file {
    path => ["/data/elasticpot/log/elasticpot.log"]
    codec => json
    type => "ElasticPot"
  }
  file {
    path => ["/data/ews/emobility/ews.json"]
    codec => json
    type => "eMobility"
  }
  file {
    path => ["/data/glastopf/log/glastopf.log"]
    type => "Glastopf"
  }
  file {
    path => ["/data/honeytrap/log/attacker.log"]
    type => "Honeytrap"
  }
}
filter {
  if [type] == "Suricata" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "P0f" {
    date {
      match => [ "timestamp", "yyyy'/'MM'/'dd HH:mm:ss" ]
      remove_field => ["timestamp"]
    }
    mutate {
      rename => { "server_port" => "dest_port" }
    }
    mutate {
      rename => { "server_ip" => "dest_ip" }
    }
    mutate {
      rename => { "client_port" => "src_port" }
    }
    mutate {
      rename => { "client_ip" => "src_ip" }
    }
  }
  if [type] == "ConPot" {
   grok {
    break_on_match => true
match => {"message" => ["\A%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}%{SPACE}%{TIME:time}%{SPACE}%{NOTSPACE:proto}%{SPACE}%{CISCO_REASON}\('%{IP:src_ip}%{GREEDYDATA}", "\A%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}%{SPACE}%{TIME:time}%{SPACE}%{NOTSPACE}%{SPACE}%{URIPROTO:proto}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{IP:src_ip}%{SPACE}%{GREEDYDATA}", "\A%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}%{SPACE}%{TIME:time}%{SPACE}%{NOTSPACE}%{SPACE}%{URIPROTO:proto}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{IP:src_ip}%{GREEDYDATA}"]
             }
   }
    mutate {
      add_field => [ "timestamp", "%{year}-%{month}-%{day}T%{time}" ]
    }
    date {
      match => [ "timestamp" , "ISO8601" ]
    }
    mutate {
      remove_field => [ "year", "month", "day", "time"]
    }
  }
  if [type] == "Cowrie" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    mutate {
      rename => { "dst_port" => "dest_port" }
    }
    mutate {
      rename => { "dst_ip" => "dest_ip" }
    }
  }
  if [type] == "Dionaea" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "ElasticPot" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "eMobility" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "Glastopf" {
    grok {
      match => [ "message", "\A%{TIMESTAMP_ISO8601}%{SPACE}%{NOTSPACE}%{SPACE}%{IP:src_ip}%{SPACE}%{WORD}%{SPACE}%{URIPROTO:http_method}%{SPACE}%{NOTSPACE:http_uri}%{SPACE}%{NOTSPACE}%{SPACE}%{HOSTNAME}:%{NUMBER:dest_port}" ]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "Honeytrap" {
    grok {
      match => [ "message", "\A\[%{TIMESTAMP_ISO8601}%{SPACE}%{WORD}]%{SPACE}%{WORD:proto}%{SPACE}%{IP:src_ip}:%{NUMBER:src_port}%{SPACE}%{NOTSPACE}%{SPACE}%{IP:dest_ip}:%{NUMBER:dest_port}%{SPACE}%{WORD:md5}%{SPACE}%{WORD:sha512}%{SPACE}\(%{NUMBER:filesize}%{SPACE}%{WORD}\)" ]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [src_ip]  {
    geoip {
      source => "src_ip"
      target => "geoip"
      database => "/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-filter-geoip-2.0.5/vendor/GeoLiteCity-2013-01-18.dat"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
      convert => [ "[geoip][coordinates]", "float" ]
    }
    geoip {
      source => "src_ip"
      target => "geoip"
      database => "/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-filter-geoip-2.0.5/vendor/GeoIPASNum-2014-02-12.dat"
      add_field => [ "[geoip][full]", "%{[geoip][number]} %{[geoip][asn]}" ]
    }
  }
}
output {
  elasticsearch {
    hosts => ["localhost:9200"]
  }
}
