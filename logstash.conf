input {
  file {
    path => ["/data/suricata/log/eve.json"]
    codec => json
    type => "SuricataIDPS-logs"
  }
  file {
    path => ["/data/cowrie/log/cowrie.json"]
    codec => json
    type => "cowrie-logs"
  }
  file {
    path => ["/data/ews/dionaea/ews.json"]
    codec => json
    type => "dionaea-logs"
  }
  file {
    path => ["/data/elasticpot/log/elasticpot.log"]
    codec => json
    type => "elasticpot-logs"
  }
  file {
    path => ["/data/ews/emobility/ews.json"]
    codec => json
    type => "emobility-logs"
  }
  file {
    path => ["/data/glastopf/log/glastopf.log"]
    type => "glastopf-logs"
  }
  file {
    path => ["/data/honeytrap/log/attacker.log"]
    type => "honeytrap-logs"
  }
}
filter {
  if [type] == "SuricataIDPS-logs" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "cowrie-logs" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "dionaea-logs" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "elasticpot-logs" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "emobility-logs" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  } 
  if [type] == "glastopf-logs" {
    grok {
      match => [ "message", "\A%{TIMESTAMP_ISO8601}%{SPACE}%{NOTSPACE}%{SPACE}%{IP:src_ip}%{SPACE}%{WORD}%{SPACE}%{URIPROTO:http_method}%{SPACE}%{NOTSPACE:http_uri}%{SPACE}%{NOTSPACE}%{SPACE}%{HOSTNAME}:%{INT:de
st_port}" ]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "honeytrap-logs" {
    grok {
      match => [ "message", "\A\[%{TIMESTAMP_ISO8601}%{SPACE}%{WORD}]%{SPACE}%{WORD:proto}%{SPACE}%{IP:src_ip}:%{INT:src_port}%{SPACE}%{NOTSPACE}%{SPACE}%{IP:dest_ip}:%{INT:dest_port}%{SPACE}%{WORD:md5}%{SPACE}%{WORD:sha512}%{SPACE}\(%{NUMBER:filesize}%{SPACE}%{WORD}\)" ]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [dst_port] {
    mutate {
      rename => { "dst_port" => "dest_port" }
    }
  }
  if [dst_ip] {
    mutate {
      rename => { "dst_ip" => "dest_ip" }
    }
  }
  if [src_ip]  {
    geoip {
      source => "src_ip"
      target => "geoip"
      database => "/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-filter-geoip-2.0.5/vendor/GeoLiteCity-2013-01-18.dat"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
      convert => [ "[geoip][coordinates]", "float" ]
    }
    geoip {
      source => "src_ip"
      target => "geoip"
      database => "/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-filter-geoip-2.0.5/vendor/GeoIPASNum-2014-02-12.dat"
      add_field => [ "[geoip][full]", "%{[geoip][number]} %{[geoip][asn]}" ]
    }  
  }
}
output {
  elasticsearch {
    hosts => ["localhost:9200"]
  }
}
